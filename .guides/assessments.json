[
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3985050060",
  "source": {
   "name": "reading question built-in objects",
   "showName": false,
   "instructions": "## Reading Question\n\nFill in the blanks below.",
   "showValues": true,
   "text": "A <<<class>>> is the blueprint used to create object.\nAn <<<object>>> a version of a class used by programmers.\nAn object is said to be an <<<instance>>> of a class.\n<<<Instantiation>>> is when an object is created from a class.",
   "distractors": "",
   "guidance": "A class is the blueprint used to create object.\nAn object a version of a class used by programmers.\nAn object is said to be an instance of a class.\nInstantiation is when an object is created from a class.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "arePartialPointsAllowed": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Vocabulary"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes"
     }
    ],
    "files": [
     "code/introObjects/BuiltIn.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/BuiltIn.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "SWBAT define class, object, instance, and instantiation",
   "tokens": {
    "blank": [
     "class",
     "object",
     "instance",
     "Instantiation"
    ],
    "text": [
     "A ",
     0,
     " is the blueprint used to create object.\nAn ",
     0,
     " a version of a class used by programmers.\nAn object is said to be an ",
     0,
     " of a class.\n",
     0,
     " is when an object is created from a class."
    ],
    "regexPositions": []
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2424555517",
  "source": {
   "name": "reading question user-define objects",
   "showName": false,
   "instructions": "## Reading Question\n\nAssume the following code:\n\n```java\npublic class Pitcher {\n    double era;\n}\n```\n\nSelect the code snippet below that instantiates an object of type `Pitcher` and sets the `era` attribute to 2.93.",
   "multipleResponse": false,
   "isRandomized": true,
   "answers": [
    {
     "_id": "6f82b656-dd40-4f8e-0ed3-54e569ec19dc",
     "correct": true,
     "answer": "Pitcher pedro = new Pitcher();\npedro.era = 2.93;"
    },
    {
     "_id": "ae1d8ae0-4f72-a2ed-bc01-072df372c465",
     "correct": false,
     "answer": "Pitcher pedro = Pitcher();\npedro.era = 2.93;"
    },
    {
     "_id": "d2cb4503-1c6c-a242-858c-21cf602a2902",
     "correct": false,
     "answer": "Pitcher pedro = new Pitcher();\nera = 2.93;"
    },
    {
     "_id": "7c6342b5-1b89-ddc0-89a0-a1fe468b5c3f",
     "correct": false,
     "answer": "pedro = new Pitcher();\npedro.era = 2.93;"
    }
   ],
   "guidance": "When instantiating an object, you start by giving the object a type. In this case, the type is `Pitcher`. Give the object a name followed by the assignment operator. Use the `new` keyword and the class name to create a new object of type `Pitcher`.\n\n```java\nPitcher pedro = new Pitcher();\n```\n\nTo access a class attribute, use dot notation. That means using the object's name (`pedro`) followed by a `.`, and the use the name of the attribute. Assign the value `2.93` to the attribute like you would a variable.\n\n```java\npedro.era = 2.93;\n```",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "incorrectPoints": 0,
   "arePartialPointsAllowed": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "User-Defined Objects"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/UserDefined.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/UserDefined.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "SWBAT identify how to instantiate an object and modify an attribute"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2364413442",
  "source": {
   "name": "the constructor reading question",
   "showName": false,
   "instructions": "## Reading Question\n\nWhich code snippet below would be the constructor for the `Dog` class?",
   "multipleResponse": false,
   "isRandomized": true,
   "answers": [
    {
     "_id": "8f697b72-01f0-9016-b2ea-b9641ec53d5d",
     "correct": true,
     "answer": "`public Dog()`"
    },
    {
     "_id": "561aa89c-be55-eb26-a2c5-10596bc16443",
     "correct": false,
     "answer": "`public class Dog`"
    },
    {
     "_id": "e1b0f7f3-a211-6d68-4169-38d14fa72c84",
     "correct": false,
     "answer": "`public dog()`"
    },
    {
     "_id": "60928bc6-45f7-e2cb-968b-20d8340f9274",
     "correct": false,
     "answer": "`constructor`"
    }
   ],
   "guidance": "In Java, the constructor uses the `public` keyword followed by the name of the class and a set of parentheses. Since the class is `Dog`, the constructor would be:\n\n```java\npublic Dog()\n```\n\nThe constructor does not use the keyword `class`. In addition, the spelling of the constructor must match that of the class. Since the class starts with a `D`, so must the constructor.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "incorrectPoints": 0,
   "arePartialPointsAllowed": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Object Constructors"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/Constructor.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/Constructor.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "SWBAT identify the constructor"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3801306128",
  "source": {
   "name": "constructor and parameters reading question",
   "showName": false,
   "instructions": "## Reading Question\n\nAssume the following object instantiation:\n\n```java\nPerson p = new Person(18, \"Dallas\");\n```\n\nWhich code snippet below represents the constructor needed for this instantiation?",
   "multipleResponse": false,
   "isRandomized": true,
   "answers": [
    {
     "_id": "f998fa0b-63a0-3e7d-57f2-f2af4d56b15e",
     "correct": true,
     "answer": "`public Person(int age, String homeTown)`"
    },
    {
     "_id": "33db92a7-565b-07a6-0280-95e5e5a133e8",
     "correct": false,
     "answer": "`public Person(age, homeTown)`"
    },
    {
     "_id": "54ea49a0-8f92-da37-e4d5-ebcdfd4f7c04",
     "correct": false,
     "answer": "`public Person(String homeTown, int age)`"
    }
   ],
   "guidance": "The correct answer is:\n\n```java\npublic Person(int age, String homeTown)\n```\n\nEach parameter for the constructor requires a type. In addition, the order of the parameters is important. Since the object instantiation had `18` before `\"Dallas\"`, the constructor must do the same.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "incorrectPoints": 0,
   "arePartialPointsAllowed": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Constructor and Parameters"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/ConstructorParameters.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/ConstructorParameters.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "SWBAT identify the constructor based on object instatiation"
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-359646314",
  "source": {
   "name": "reading question class attributes",
   "showName": false,
   "instructions": "## Reading Question\n\nFill in the blanks below.",
   "showValues": true,
   "text": "A <<<class>>> attribute is an attribute whose value is shared by all instances of a class.\nAn <<<object>>> attribute is an attribute whose value is independent of other instances of a class.",
   "distractors": "variable\nconstant",
   "guidance": "A class attribute is an attribute whose value is shared by all instances of a class.\nAn object attribute is an attribute whose value is independent of other instances of a class.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "arePartialPointsAllowed": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Class Attributes"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/ClassAttributes.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/ClassAttributes.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "SWBAT differentiate between a class attribute and an object attribute",
   "tokens": {
    "blank": [
     "class",
     "object"
    ],
    "text": [
     "A ",
     0,
     " attribute is an attribute whose value is shared by all instances of a class.\nAn ",
     0,
     " attribute is an attribute whose value is independent of other instances of a class."
    ],
    "regexPositions": []
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-2232783722",
  "source": {
   "name": "reading question shallow vs deep copy",
   "showName": false,
   "instructions": "## Reading Question\n\nFill in the blanks below.",
   "showValues": true,
   "text": "A <<<deep>>> copy is when Java makes a copy of the object and its attributes.\nA <<<shallow>>> copy is when Java makes a copy of the object, but the attributes are shared.",
   "distractors": "small\nmedium\nfake",
   "guidance": "A deep copy is when Java makes a copy of the object and its attributes.\nA shallow copy is when Java makes a copy of the object, but the attributes are shared.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "arePartialPointsAllowed": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Shallow and Deep Copying"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/Copies.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/Copies.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "SWBAT differentiate between shallow and deep copies",
   "tokens": {
    "blank": [
     "deep",
     "shallow"
    ],
    "text": [
     "A ",
     0,
     " copy is when Java makes a copy of the object and its attributes.\nA ",
     0,
     " copy is when Java makes a copy of the object, but the attributes are shared."
    ],
    "regexPositions": []
   }
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2431160952",
  "source": {
   "name": "introduction to objects formative assessment 1",
   "showName": false,
   "instructions": "## Formative Assessment\n\nAssume the following code:\n\n```java\nDog fido = new Dog();\nfido.breed = \"poodle\";\n```\n\nRearrange the code blocks below to declare the `Dog` class that corresponds to the code above. **Note**, not all of the code blocks will be used.",
   "initial": "class Dog {\n  String breed;\n}\nString breed = &quot;poodle&quot;; #distractor\npublic Dog(String breed) { #distractor\nclass dog #distractor",
   "options": "{\"sortableId\":\"sortable\",\"max_wrong_lines\":10,\"exec_limit\":2500,\"can_indent\":true,\"x_indent\":50,\"lang\":\"en\",\"trashId\":\"sortableTrash\"}",
   "grader": "1",
   "guidance": "The correct answer is:\n\n```java\nclass Dog {\n  String breed;\n}\n```\n\n* In the given code, no arguments were passed to `Dog` when `fido` was instantiated. There should be no constructor.\n* The given code set the value for `breed`, so `breed` should not be given a default value when initialized.\n* In the given code, the `Dog` class uses a capital `D`, so should the class definition.",
   "showGuidanceAfterResponse": true,
   "points": 20,
   "oneTimeTest": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     },
     {
      "name": "Content",
      "value": "Declare a Class"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "SWBAT declare a class"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-1338030279",
  "source": {
   "name": "introduction to objects formative assessment 2",
   "showName": false,
   "instructions": "## Formative Assessment\n\nSelect **all** of the statements that are true about shallow and deep copies.",
   "multipleResponse": true,
   "isRandomized": true,
   "answers": [
    {
     "_id": "7776806d-f482-fb51-e22a-5f17da2b1168",
     "correct": true,
     "answer": "You need to use the copy constructor to make a deep copy"
    },
    {
     "_id": "b0b7e9f9-e246-5fdf-3639-a111c948c8d3",
     "correct": true,
     "answer": "Shallow copies only copy the object but not the object attributes"
    },
    {
     "_id": "4c57c90c-c40c-e28a-bfa8-0a483a5f4ef6",
     "correct": true,
     "answer": "Deep copies make a copy of the object and the object attributes"
    },
    {
     "_id": "6fbcbda6-0a7f-f1ea-0be5-84c43dce2904",
     "correct": true,
     "answer": "Changing an attribute of one shallow copy will affect the attribute of the other shallow copy"
    }
   ],
   "guidance": "All of the statements are true. \n* The copy constructor is used to make a deep copy. \n* Shallow copies only make a copy of the object, but not of the attributes.\n* Deep copes make a copy of the object and the attributes.\n* Changing an attribute of one shallow copy will affect the attribute of the other shallow copy.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 20,
   "incorrectPoints": 0,
   "arePartialPointsAllowed": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Shallow and Deep Copying"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "SWBAT differentiate between shallow and deep copies"
  }
 },
 {
  "type": "test",
  "taskId": "test-3286085930",
  "source": {
   "name": "introduction to objects coding exercise 1",
   "showName": false,
   "instructions": "Submit your code when ready.",
   "command": "python .guides/secure/introObjects/exercise1_test.py",
   "arePartialPointsAllowed": true,
   "timeoutSeconds": 40,
   "guidance": "Here is one possible solution:\n\n```java\n//add class definitions below this line\n    \nclass PracticeClass {\n  String date;\n}\n  \n//add class definitions above this line\n\npublic class Exercise1 {\n  public static void main(String[] args) {\n    \n    //add code below this line\n\n    \n\n    //add code above this line\n  }\n}\n```\n\nCreate the class `PracticeClass`. Then create the object attribute `date` of type `String`. ",
   "showGuidanceAfterResponse": true,
   "points": 20,
   "oneTimeTest": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Advanced Code Test"
     },
     {
      "name": "Content",
      "value": "Creating Classes"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/Exercise1.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/Exercise1.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "SWBAT create a class without a constructor"
  }
 },
 {
  "type": "test",
  "taskId": "test-1000868489",
  "source": {
   "name": "introduction to objects exercise 2",
   "showName": false,
   "instructions": "Submit your code when ready.",
   "command": "python /usr/share/codio/assessments/assessments.py",
   "codeEnvConfig": "{\"type\":\"java\",\"subtype\":\"junit\",\"files\":[{\"filePath\":\".guides/secure/introObjects/Exercise2Tester.java\",\"className\":\"Exercise2Tester\"}],\"partialPoints\":true,\"maxPoints\":20,\"wd\":\"\",\"sources\":\"code/introObjects\",\"libs\":\"\",\"testsources\":\"\"}",
   "arePartialPointsAllowed": true,
   "timeoutSeconds": 300,
   "guidance": "Here is one possible solution:\n\n```java\n//add class definitions below this line\n    \nclass Cat {\n  String breed;\n  String color;\n  String name;\n  \n  public Cat() {\n    breed = \"american shorthair\";\n    color = \"black\";\n    name = \"kiwi\";\n  }\n}\n  \n//add class definitions above this line\n\npublic class Exercise2 {\n  public static void main(String[] args) {\n    \n    //add code below this line\n\n    \n\n    //add code above this line\n  }\n}\n```\n\nCreate the class `Cat`, then instantiate the string variables, `breed`, `color`, and `name`. Then create the constructor, but do not pass any parameters to it. Finally, set the values of the object attributes to be `\"american shorthair\"`, `\"black\"`, and `\"kiwi\"` respectively.",
   "showGuidanceAfterResponse": true,
   "points": 20,
   "oneTimeTest": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Advanced Code Test"
     },
     {
      "name": "Content",
      "value": "Object Constructors"
     },
     {
      "name": "Programming Language",
      "value": "Java"
     },
     {
      "name": "Category",
      "value": "Classes and Objects"
     }
    ],
    "files": [
     "code/introObjects/Exercise2.java"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/introObjects/Exercise2.java"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "SWBAT create a class with a constructor"
  }
 }
]